#include <stdio.h>
#include <stdlib.h>

/**
 * (4pts)
 * Create a function called pack that takes three integers (a, b and c) and
 * packs them into one unsigned integer in the following way:
 *                   bit positions:
 *  |     a      |   b   |             c            |
 * 31           24      20                          0
 * a occupies bits 24 - 31 (8 bits)
 * b occupies bits 20 - 23 (4 bits)
 * c occupies bits  0 - 19 (20 bits)
 * Truncate the high bits of a, b and c respectively if they are too big to
 * fit into their place.
 */

unsigned int pack(unsigned int a, unsigned int b, unsigned int c)
{
  int newA = a &0x8f; // get the 8 bits
  int newB = b &0x4f; // get the 4 bits
  int newC = c &0x14; // get the 20 bits
  int ret = 0;
  
  newA = newA << 24;
  newB = newB << 20;
  
  ret = newA |= newB;
  ret |= newC;
  
  
  return ret;
  
}


/**
 * Do not modify main below:  This takes decimal numbers from the command
 * line and uses them with your pack function.  Output is in hex.
 * Example input/output:
 * ./q3 5 20 10
 * 5,20,10 -> 0540000a
 */
int main(int argc, char *argv[])
{
  if (argc < 4) {
    printf("Usage: %s a b c\n", argv[0]);
    return 0;
  }
  unsigned int a = strtol(argv[1],NULL,10);
  unsigned int b = strtol(argv[2],NULL,10);
  unsigned int c = strtol(argv[3],NULL,10);
  printf("%d,%d,%d -> %08x\n", a, b, c, pack(a,b,c));
  return 0;
}
